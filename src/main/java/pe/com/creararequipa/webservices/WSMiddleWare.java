package pe.com.creararequipa.webservices;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.5.redhat-630343
 * 2020-11-18T13:58:50.732-05:00
 * Generated source version: 3.1.5.redhat-630343
 * 
 */
@WebServiceClient(name = "WSMiddleWare", 
                  wsdlLocation = "classpath:wsdl/WSMiddleWare.wsdl",
                  targetNamespace = "http://www.creararequipa.com.pe/webservices") 
public class WSMiddleWare extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.creararequipa.com.pe/webservices", "WSMiddleWare");
    public final static QName WSMiddleWareSoap12 = new QName("http://www.creararequipa.com.pe/webservices", "WSMiddleWareSoap12");
    public final static QName WSMiddleWareSoap = new QName("http://www.creararequipa.com.pe/webservices", "WSMiddleWareSoap");
    static {
        URL url = WSMiddleWare.class.getClassLoader().getResource("wsdl/WSMiddleWare.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(WSMiddleWare.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/WSMiddleWare.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public WSMiddleWare(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSMiddleWare(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSMiddleWare() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public WSMiddleWare(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public WSMiddleWare(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public WSMiddleWare(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns WSMiddleWareSoap
     */
    @WebEndpoint(name = "WSMiddleWareSoap12")
    public WSMiddleWareSoap getWSMiddleWareSoap12() {
        return super.getPort(WSMiddleWareSoap12, WSMiddleWareSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSMiddleWareSoap
     */
    @WebEndpoint(name = "WSMiddleWareSoap12")
    public WSMiddleWareSoap getWSMiddleWareSoap12(WebServiceFeature... features) {
        return super.getPort(WSMiddleWareSoap12, WSMiddleWareSoap.class, features);
    }


    /**
     *
     * @return
     *     returns WSMiddleWareSoap
     */
    @WebEndpoint(name = "WSMiddleWareSoap")
    public WSMiddleWareSoap getWSMiddleWareSoap() {
        return super.getPort(WSMiddleWareSoap, WSMiddleWareSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSMiddleWareSoap
     */
    @WebEndpoint(name = "WSMiddleWareSoap")
    public WSMiddleWareSoap getWSMiddleWareSoap(WebServiceFeature... features) {
        return super.getPort(WSMiddleWareSoap, WSMiddleWareSoap.class, features);
    }

}
